"""Create base dicts models

Revision ID: 4b3c5f007ec7
Revises: 4e411e35bab5
Create Date: 2022-11-28 15:57:12.569746

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '4b3c5f007ec7'
down_revision = '4e411e35bab5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('deathday', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('publication_year', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('book_authors',
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], )
    )
    op.create_table('book_book_types',
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('type_slug', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['type_slug'], ['book_types.slug'], )
    )
    op.create_table('book_countries',
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('country_slug', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['country_slug'], ['countries.slug'], )
    )
    op.create_table('book_genres',
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('genre_slug', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['genre_slug'], ['genres.slug'], )
    )
    op.create_unique_constraint(None, 'book_types', ['slug'])
    op.create_unique_constraint(None, 'countries', ['slug'])
    op.create_unique_constraint(None, 'genres', ['slug'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'genres', type_='unique')
    op.drop_constraint(None, 'countries', type_='unique')
    op.drop_constraint(None, 'book_types', type_='unique')
    op.drop_table('book_genres')
    op.drop_table('book_countries')
    op.drop_table('book_book_types')
    op.drop_table('book_authors')
    op.drop_table('books')
    op.drop_table('authors')
    # ### end Alembic commands ###
